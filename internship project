import yfinance as yf
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error

# Step 1: Download historical stock data
ticker = 'AAPL'  # You can change this to any stock symbol
df = yf.download(ticker, start='2015-01-01', end='2024-12-31')

# Step 2: Prepare the data
df = df[['Close']].dropna()
df['Days'] = np.arange(len(df)).reshape(-1, 1)

# Step 3: Define features and target
X = df['Days'].values.reshape(-1, 1)
y = df['Close'].values

# Step 4: Train/test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, shuffle=False)

# Step 5: Train the Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Step 6: Make predictions
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)

# Step 7: Visualize the results
plt.figure(figsize=(10, 5))
plt.plot(df['Days'], df['Close'], label='Actual Prices')
plt.plot(X_test, y_pred, label='Predicted Prices', color='red')
plt.title(f'{ticker} Stock Price Prediction (MSE: {mse:.2f})')
plt.xlabel('Days')
plt.ylabel('Price')
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()
